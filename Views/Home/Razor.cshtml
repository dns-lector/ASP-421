@{
    ViewData["Title"] = "Razor";
}

<div class="text-center">
    <h1 class="display-4">Технологія Razor</h1>
</div>

<p>
    Razor - інструмент додавання до HTML засобів мови програмування.
</p>
<h2>Вирази</h2>
<p>
    Вираз (у програмуванні, expression) - інструкція, що має результат. У контексті 
    Razor мова іде про виведення цього результату у складі HTML. 
    Виведення результату здійснюється за допомогою конструкції &commat;(2 + 2).
    Сам символ &commat; для виведення має бути замінений html-сутністю &amp;commat;
</p>
<code>&commat;(2 + 2) = @(2+2)</code>
<h2>Змінні та інструкції оголошення</h2>
<p>
    Інструкції, що не мають результату (statements), задаються конструкцією 
    &commat;{ int x = 10; int[] arr = [1,2,3,4,5];}
</p>
@{
    int x = 10; 
    int[] arr = [1, 2, 3, 4, 5];
}

<h2>Інструкції управління</h2>
<p>
    Більшість інструкцій мови програмування доступні у Razor з префіксом &commat;:
    &commat;if, &commat;for, &commat;while ...
</p>
@foreach(int arg in arr)
{
    // Razor автоматично розділяє інструкції та HTML
    int y = arg + 1;
    // Скорочена форма виразу @(y) -> @y   !!  @y+1  =/=  @(y+1)
    <span>@y </span>
}
<h2>Tag-helpers</h2>
<p>
    Розширення атрибутів тегів для врахування особливостей ASP<br/>
</p>
<pre>
    &lt;a class="nav-link text-dark"     - class: стандартний атрибут
       asp-area=""                       - tag-helper: namespace в ASP коді
       asp-controller="Home"             - назва контролера (HomeController)
       asp-action="Razor"                - назва методу контролера
    >Razor&lt;/a>                        - контент (тіло) тега
</pre>
<p>
    Тег-хелпери існують лише у Razor, при побудові HTML вони замінюються 
    стандартними тегами/атрибутами. Проте, враховують внутрішні налаштування,
    наприклад, маршрутизацію. Якщо до неї внесуть зміни, то хелпери це одразу
    врахують.
</p>